{
    "name": "amazonaws-com-elasticloadbalancingv-2-connector",
    "version": "2015.0.0",
    "description": "Elastic Load Balancing A load balancer distributes incoming traffic across\ntargets, such as your EC2 instances. This enables you to increase the\navailability of your application. The load balancer also monitors the health of\nits registered targets and ensures that it routes traffic only to healthy\ntargets. You configure your load balancer to accept incoming traffic by\nspecifying one or more listeners, which are configured with a protocol and port\nnumber for connections from clients to the load balancer. You configure a target\ngroup with a protocol and port number for connections from the load balancer to\nthe targets, and with health check settings to be used when checking the health\nstatus of the targets.\n\nElastic Load Balancing supports the following types of load balancers:\nApplication Load Balancers, Network Load Balancers, and Classic Load Balancers.\n\nAn Application Load Balancer makes routing and load balancing decisions at the\napplication layer (HTTP/HTTPS). A Network Load Balancer makes routing and load\nbalancing decisions at the transport layer (TCP/TLS). Both Application Load\nBalancers and Network Load Balancers can route requests to one or more ports on\neach EC2 instance or container instance in your virtual private cloud (VPC).\n\nA Classic Load Balancer makes routing and load balancing decisions either at the\ntransport layer (TCP/SSL) or the application layer (HTTP/HTTPS), and supports\neither EC2-Classic or a VPC. For more information, see the Elastic Load\nBalancing User Guide\n[https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/].\n\nThis reference covers the 2015-12-01 API, which supports Application Load\nBalancers and Network Load Balancers. The 2012-06-01 API supports Classic Load\nBalancers.\n\nTo get started, complete the following tasks:\n\n 1.  Create a load balancer using CreateLoadBalancer.\n    \n    \n 2.  Create a target group using CreateTargetGroup.\n    \n    \n 3.  Register targets for the target group using RegisterTargets.\n    \n    \n 4.  Create one or more listeners for your load balancer using CreateListener.\n    \n    \n\nTo delete a load balancer and its related resources, complete the following\ntasks:\n\n 1.  Delete the load balancer using DeleteLoadBalancer.\n    \n    \n 2.  Delete the target group using DeleteTargetGroup.\n    \n    \n\nAll Elastic Load Balancing operations are idempotent, which means that they\ncomplete at most one time. If you repeat an operation, it succeeds.",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}